{
  "test_plan": [
    {
      "id": "test_1",
      "name": "Role Selection Screen",
      "description": "Test the initial role selection screen where users choose between customer and barber roles",
      "steps": [
        "Navigate to the app",
        "Verify the app title 'Queue Radar' is displayed",
        "Verify the subtitle 'Skip the wait, find your cut' is displayed",
        "Verify two buttons are present: 'I'm a Customer' and 'I'm a Barber'",
        "Click on 'I'm a Customer' button",
        "Verify navigation to CustomerHome screen",
        "Go back to RoleGate screen",
        "Click on 'I'm a Barber' button",
        "Verify navigation to BarberDashboard screen"
      ],
      "expected_result": "Users can successfully select their role and navigate to appropriate screens"
    },
    {
      "id": "test_2",
      "name": "Customer Map Interface",
      "description": "Test the customer map view with salon markers and real-time queue information",
      "steps": [
        "Navigate to CustomerHome screen",
        "Verify map is displayed with current location",
        "Verify loading indicator is shown while getting location",
        "Verify salon markers appear on the map",
        "Click on a salon marker",
        "Verify callout shows salon information (name, queue, address, hours)",
        "Verify queue status is color-coded (green for no wait, orange for short wait, red for long wait)",
        "Test 'Navigate' button in callout",
        "Test 'Call' button in callout"
      ],
      "expected_result": "Map displays salon markers with accurate queue information and interactive features"
    },
    {
      "id": "test_3",
      "name": "Barber Dashboard Queue Management",
      "description": "Test the barber dashboard for real-time queue management",
      "steps": [
        "Navigate to BarberDashboard screen",
        "Verify salon name is displayed",
        "Verify current queue count is displayed",
        "Click '+ Add Person' button",
        "Verify queue count increases by 1",
        "Click '- Remove Person' button",
        "Verify queue count decreases by 1",
        "Test multiple rapid clicks on add/remove buttons",
        "Verify queue count never goes below 0",
        "Click 'Seed Demo Data' button",
        "Verify demo data is seeded successfully"
      ],
      "expected_result": "Barbers can successfully manage queue counts in real-time"
    },
    {
      "id": "test_4",
      "name": "Firebase Real-time Updates",
      "description": "Test real-time synchronization between customer and barber interfaces",
      "steps": [
        "Open CustomerHome screen on one device/simulator",
        "Open BarberDashboard screen on another device/simulator",
        "In BarberDashboard, add a person to the queue",
        "Verify queue count updates in real-time on CustomerHome map markers",
        "Remove a person from the queue in BarberDashboard",
        "Verify queue count updates in real-time on CustomerHome map markers",
        "Test multiple rapid queue changes",
        "Verify all changes are reflected immediately"
      ],
      "expected_result": "Queue changes in barber dashboard are immediately reflected in customer map view"
    },
    {
      "id": "test_5",
      "name": "Location Services",
      "description": "Test GPS location functionality for customer positioning",
      "steps": [
        "Navigate to CustomerHome screen",
        "Verify location permission is requested",
        "Grant location permission",
        "Verify map centers on current location",
        "Verify map region is set with appropriate zoom level",
        "Test with location permission denied",
        "Verify appropriate error handling"
      ],
      "expected_result": "App successfully gets user location and centers map appropriately"
    },
    {
      "id": "test_6",
      "name": "Salon Marker Interactions",
      "description": "Test interactive features of salon markers on the map",
      "steps": [
        "Navigate to CustomerHome screen",
        "Wait for salon markers to load",
        "Tap on a salon marker",
        "Verify callout displays salon name",
        "Verify callout shows current queue count",
        "Verify callout shows queue status (No Wait/Short Wait/Long Wait)",
        "Verify callout shows address if available",
        "Verify callout shows hours if available",
        "Test 'Navigate' button opens maps app",
        "Test 'Call' button opens phone app"
      ],
      "expected_result": "Salon markers provide comprehensive information and useful actions"
    },
    {
      "id": "test_7",
      "name": "Demo Data Seeding",
      "description": "Test the demo data seeding functionality",
      "steps": [
        "Navigate to BarberDashboard screen",
        "Click 'Seed Demo Data' button",
        "Verify success message is displayed",
        "Navigate to CustomerHome screen",
        "Verify multiple salon markers appear on map",
        "Verify different salons have different queue counts",
        "Verify salons are located in different areas (NYC, Times Square, Queens, Brooklyn, Midtown)"
      ],
      "expected_result": "Demo data is successfully seeded and appears on the customer map"
    },
    {
      "id": "test_8",
      "name": "App Navigation Flow",
      "description": "Test complete user journey through the app",
      "steps": [
        "Start at RoleGate screen",
        "Select 'I'm a Customer' role",
        "Verify navigation to CustomerHome screen",
        "Go back to RoleGate (if possible)",
        "Select 'I'm a Barber' role",
        "Verify navigation to BarberDashboard screen",
        "Test app state persistence",
        "Test navigation between different screens"
      ],
      "expected_result": "Users can navigate seamlessly between different app screens"
    },
    {
      "id": "test_9",
      "name": "Error Handling",
      "description": "Test error handling for various failure scenarios",
      "steps": [
        "Test with no internet connection",
        "Verify appropriate error messages for Firebase connection issues",
        "Test with location services disabled",
        "Verify graceful handling of location errors",
        "Test with Firebase permissions denied",
        "Verify app doesn't crash on various error conditions"
      ],
      "expected_result": "App handles errors gracefully and provides appropriate user feedback"
    },
    {
      "id": "test_10",
      "name": "UI/UX Responsiveness",
      "description": "Test the app's responsiveness and user interface",
      "steps": [
        "Test on different screen sizes",
        "Verify buttons are appropriately sized and touchable",
        "Verify text is readable and properly formatted",
        "Test map interactions (zoom, pan, tap)",
        "Verify loading states are properly displayed",
        "Test color coding for queue status",
        "Verify callout styling and layout"
      ],
      "expected_result": "App provides a smooth and responsive user experience across different devices"
    }
  ]
} 