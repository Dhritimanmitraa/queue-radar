{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, connectAuthEmulator } from 'firebase/auth';\nimport { getFirestore, connectFirestoreEmulator } from 'firebase/firestore';\nvar firebaseConfig = {\n  apiKey: 'REDACTED',\n  authDomain: 'queue-radar.firebaseapp.com',\n  projectId: 'queue-radar',\n  storageBucket: 'queue-radar.firebasestorage.app',\n  messagingSenderId: '662611543773',\n  appId: '1:662611543773:web:4b5d838828de81cee17d34'\n};\nvar app = initializeApp(firebaseConfig);\nexport var auth = getAuth(app);\nexport var db = getFirestore(app);\nif (__DEV__ && typeof window !== 'undefined') {\n  try {\n    connectAuthEmulator(auth, 'http://localhost:9099', {\n      disableWarnings: true\n    });\n    connectFirestoreEmulator(db, 'localhost', 8080);\n  } catch (error) {\n    console.log('Firebase emulators not available, using live Firebase');\n  }\n}\nexport default app;","map":{"version":3,"names":["initializeApp","getAuth","connectAuthEmulator","getFirestore","connectFirestoreEmulator","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","db","__DEV__","window","disableWarnings","error","console","log"],"sources":["C:/Users/dhrit/Desktop/Idea/Idea/mobile/services/firebase.ts"],"sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getAuth, connectAuthEmulator } from 'firebase/auth';\r\nimport { getFirestore, connectFirestoreEmulator } from 'firebase/firestore';\r\n\r\n// Firebase project configuration (queue-radar)\r\n// measurementId isnâ€™t needed for the mobile app\r\nconst firebaseConfig = {\r\n  apiKey: 'REDACTED',\r\n  authDomain: 'queue-radar.firebaseapp.com',\r\n  projectId: 'queue-radar',\r\n  storageBucket: 'queue-radar.firebasestorage.app', // verify in Firebase Console\r\n  messagingSenderId: '662611543773',\r\n  appId: '1:662611543773:web:4b5d838828de81cee17d34',\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\n\r\n// For demo purposes - connects to Firebase emulators if available\r\nif (__DEV__ && typeof window !== 'undefined') {\r\n  // Only connect to emulators in development and on web\r\n  try {\r\n    connectAuthEmulator(auth, 'http://localhost:9099', { disableWarnings: true });\r\n    connectFirestoreEmulator(db, 'localhost', 8080);\r\n  } catch (error) {\r\n    // Emulators not running - will use live Firebase\r\n    console.log('Firebase emulators not available, using live Firebase');\r\n  }\r\n}\r\n\r\nexport default app; "],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,mBAAmB,QAAQ,eAAe;AAC5D,SAASC,YAAY,EAAEC,wBAAwB,QAAQ,oBAAoB;AAI3E,IAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,6BAA6B;EACzCC,SAAS,EAAE,aAAa;EACxBC,aAAa,EAAE,iCAAiC;EAChDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;AAED,IAAMC,GAAG,GAAGZ,aAAa,CAACK,cAAc,CAAC;AAEzC,OAAO,IAAMQ,IAAI,GAAGZ,OAAO,CAACW,GAAG,CAAC;AAChC,OAAO,IAAME,EAAE,GAAGX,YAAY,CAACS,GAAG,CAAC;AAGnC,IAAIG,OAAO,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;EAE5C,IAAI;IACFd,mBAAmB,CAACW,IAAI,EAAE,uBAAuB,EAAE;MAAEI,eAAe,EAAE;IAAK,CAAC,CAAC;IAC7Eb,wBAAwB,CAACU,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC;EACjD,CAAC,CAAC,OAAOI,KAAK,EAAE;IAEdC,OAAO,CAACC,GAAG,CAAC,uDAAuD,CAAC;EACtE;AACF;AAEA,eAAeR,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}