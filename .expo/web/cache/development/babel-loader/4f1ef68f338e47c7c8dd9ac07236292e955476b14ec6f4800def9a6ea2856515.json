{"ast":null,"code":"import React from 'react';\nimport { Marker, Callout } from 'react-native-maps';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SalonMarker(_ref) {\n  var salon = _ref.salon;\n  var location = salon.location,\n    name = salon.name,\n    queue = salon.queue,\n    address = salon.address,\n    phone = salon.phone,\n    hours = salon.hours;\n  var getMarkerColor = function getMarkerColor(queueLength) {\n    if (queueLength === 0) return '#34C759';\n    if (queueLength <= 3) return '#FF9500';\n    return '#FF3B30';\n  };\n  var getQueueStatus = function getQueueStatus(queueLength) {\n    if (queueLength === 0) return 'No Wait';\n    if (queueLength <= 3) return 'Short Wait';\n    return 'Long Wait';\n  };\n  var handleNavigate = function handleNavigate() {\n    if (address) {\n      var encodedAddress = encodeURIComponent(address);\n      var url = `https://maps.google.com/?q=${encodedAddress}`;\n      Linking.openURL(url);\n    }\n  };\n  var handleCall = function handleCall() {\n    if (phone) {\n      Linking.openURL(`tel:${phone}`);\n    }\n  };\n  return _jsx(Marker, {\n    coordinate: {\n      latitude: location.latitude,\n      longitude: location.longitude\n    },\n    pinColor: getMarkerColor(queue),\n    children: _jsx(Callout, {\n      style: styles.callout,\n      children: _jsxs(View, {\n        style: styles.calloutContent,\n        children: [_jsx(Text, {\n          style: styles.salonName,\n          children: name\n        }), _jsx(View, {\n          style: styles.queueInfo,\n          children: _jsxs(Text, {\n            style: [styles.queueText, {\n              color: getMarkerColor(queue)\n            }],\n            children: [queue, \" waiting \\u2022 \", getQueueStatus(queue)]\n          })\n        }), address && _jsx(Text, {\n          style: styles.address,\n          children: address\n        }), hours && _jsxs(Text, {\n          style: styles.hours,\n          children: [\"Hours: \", hours]\n        }), _jsxs(View, {\n          style: styles.buttonContainer,\n          children: [address && _jsx(Button, {\n            title: \"Navigate\",\n            onPress: handleNavigate,\n            color: \"#007AFF\"\n          }), phone && _jsx(Button, {\n            title: \"Call\",\n            onPress: handleCall,\n            color: \"#34C759\"\n          })]\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  callout: {\n    width: 200,\n    padding: 0\n  },\n  calloutContent: {\n    padding: 12,\n    gap: 8\n  },\n  salonName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  queueInfo: {\n    paddingVertical: 4\n  },\n  queueText: {\n    fontSize: 14,\n    fontWeight: '600'\n  },\n  address: {\n    fontSize: 12,\n    color: '#666',\n    lineHeight: 16\n  },\n  hours: {\n    fontSize: 12,\n    color: '#666',\n    fontStyle: 'italic'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    gap: 8,\n    marginTop: 8\n  }\n});","map":{"version":3,"names":["React","Marker","Callout","Text","View","Button","StyleSheet","Linking","jsx","_jsx","jsxs","_jsxs","SalonMarker","_ref","salon","location","name","queue","address","phone","hours","getMarkerColor","queueLength","getQueueStatus","handleNavigate","encodedAddress","encodeURIComponent","url","openURL","handleCall","coordinate","latitude","longitude","pinColor","children","style","styles","callout","calloutContent","salonName","queueInfo","queueText","color","buttonContainer","title","onPress","create","width","padding","gap","fontSize","fontWeight","paddingVertical","lineHeight","fontStyle","flexDirection","marginTop"],"sources":["C:/Users/dhrit/Desktop/Idea/Idea/mobile/components/SalonMarker.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Marker, Callout } from 'react-native-maps';\r\nimport { Text, View, Button, StyleSheet, Linking } from 'react-native';\r\n\r\nexport default function SalonMarker({ salon }: { salon: any }) {\r\n  const { location, name, queue, address, phone, hours } = salon;\r\n\r\n  const getMarkerColor = (queueLength: number) => {\r\n    if (queueLength === 0) return '#34C759'; // Green\r\n    if (queueLength <= 3) return '#FF9500'; // Orange\r\n    return '#FF3B30'; // Red\r\n  };\r\n\r\n  const getQueueStatus = (queueLength: number) => {\r\n    if (queueLength === 0) return 'No Wait';\r\n    if (queueLength <= 3) return 'Short Wait';\r\n    return 'Long Wait';\r\n  };\r\n\r\n  const handleNavigate = () => {\r\n    if (address) {\r\n      const encodedAddress = encodeURIComponent(address);\r\n      const url = `https://maps.google.com/?q=${encodedAddress}`;\r\n      Linking.openURL(url);\r\n    }\r\n  };\r\n\r\n  const handleCall = () => {\r\n    if (phone) {\r\n      Linking.openURL(`tel:${phone}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Marker\r\n      coordinate={{ \r\n        latitude: location.latitude, \r\n        longitude: location.longitude \r\n      }}\r\n      pinColor={getMarkerColor(queue)}\r\n    >\r\n      <Callout style={styles.callout}>\r\n        <View style={styles.calloutContent}>\r\n          <Text style={styles.salonName}>{name}</Text>\r\n          \r\n          <View style={styles.queueInfo}>\r\n            <Text style={[styles.queueText, { color: getMarkerColor(queue) }]}>\r\n              {queue} waiting â€¢ {getQueueStatus(queue)}\r\n            </Text>\r\n          </View>\r\n\r\n          {address && (\r\n            <Text style={styles.address}>{address}</Text>\r\n          )}\r\n\r\n          {hours && (\r\n            <Text style={styles.hours}>Hours: {hours}</Text>\r\n          )}\r\n\r\n          <View style={styles.buttonContainer}>\r\n            {address && (\r\n              <Button \r\n                title=\"Navigate\" \r\n                onPress={handleNavigate}\r\n                color=\"#007AFF\"\r\n              />\r\n            )}\r\n            {phone && (\r\n              <Button \r\n                title=\"Call\" \r\n                onPress={handleCall}\r\n                color=\"#34C759\"\r\n              />\r\n            )}\r\n          </View>\r\n        </View>\r\n      </Callout>\r\n    </Marker>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  callout: {\r\n    width: 200,\r\n    padding: 0,\r\n  },\r\n  calloutContent: {\r\n    padding: 12,\r\n    gap: 8,\r\n  },\r\n  salonName: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  queueInfo: {\r\n    paddingVertical: 4,\r\n  },\r\n  queueText: {\r\n    fontSize: 14,\r\n    fontWeight: '600',\r\n  },\r\n  address: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n    lineHeight: 16,\r\n  },\r\n  hours: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n    fontStyle: 'italic',\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    gap: 8,\r\n    marginTop: 8,\r\n  },\r\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}