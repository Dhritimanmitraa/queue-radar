{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\"];\nimport { collection, doc, setDoc, GeoPoint } from 'firebase/firestore';\nimport { db } from './firebase';\nexport const demoSalons = [{\n  id: 'demo-salon-1',\n  name: \"Fade Masters\",\n  location: new GeoPoint(40.7128, -74.0060),\n  queue: 3,\n  ownerUid: \"demo-owner-1\",\n  lastUpdated: Date.now(),\n  address: \"123 Broadway, New York, NY\",\n  phone: \"(555) 123-4567\",\n  hours: \"9 AM - 8 PM\"\n}, {\n  name: \"The Gentleman's Cut\",\n  location: new GeoPoint(40.7589, -73.9851),\n  queue: 0,\n  ownerUid: \"demo-owner-2\",\n  lastUpdated: Date.now(),\n  address: \"456 Times Square, New York, NY\",\n  phone: \"(555) 234-5678\",\n  hours: \"8 AM - 9 PM\"\n}, {\n  name: \"Quick Clips\",\n  location: new GeoPoint(40.7282, -73.7949),\n  queue: 7,\n  ownerUid: \"demo-owner-3\",\n  lastUpdated: Date.now(),\n  address: \"789 Queens Blvd, Queens, NY\",\n  phone: \"(555) 345-6789\",\n  hours: \"7 AM - 10 PM\"\n}, {\n  name: \"Style Central\",\n  location: new GeoPoint(40.6782, -73.9442),\n  queue: 1,\n  ownerUid: \"demo-owner-4\",\n  lastUpdated: Date.now(),\n  address: \"321 Brooklyn Ave, Brooklyn, NY\",\n  phone: \"(555) 456-7890\",\n  hours: \"10 AM - 7 PM\"\n}, {\n  name: \"Metro Barber Shop\",\n  location: new GeoPoint(40.7505, -73.9934),\n  queue: 5,\n  ownerUid: \"demo-owner-5\",\n  lastUpdated: Date.now(),\n  address: \"654 5th Avenue, New York, NY\",\n  phone: \"(555) 567-8901\",\n  hours: \"9 AM - 8 PM\"\n}];\nexport async function seedDemoData() {\n  try {\n    const salonsCollection = collection(db, 'salons');\n    for (const salon of demoSalons) {\n      const salonDoc = salon.id ? doc(salonsCollection, salon.id) : doc(salonsCollection);\n      const data = _objectWithoutPropertiesLoose(salon, _excluded);\n      await setDoc(salonDoc, data);\n      console.log(`Added demo salon: ${salon.name}`);\n    }\n    console.log('Demo data seeded successfully!');\n  } catch (error) {\n    console.error('Error seeding demo data:', error);\n  }\n}\nexport const DEMO_SALON_ID = 'demo-salon-1';","map":{"version":3,"names":["collection","doc","setDoc","GeoPoint","db","demoSalons","id","name","location","queue","ownerUid","lastUpdated","Date","now","address","phone","hours","seedDemoData","salonsCollection","salon","salonDoc","data","_objectWithoutPropertiesLoose","_excluded","console","log","error","DEMO_SALON_ID"],"sources":["C:/Users/dhrit/Desktop/Idea/services/demoData.ts"],"sourcesContent":["import { collection, doc, setDoc, GeoPoint } from 'firebase/firestore';\r\nimport { db } from './firebase';\r\n\r\nexport interface SalonData {\r\n  name: string;\r\n  location: GeoPoint;\r\n  queue: number;\r\n  ownerUid: string;\r\n  lastUpdated: number;\r\n  address?: string;\r\n  phone?: string;\r\n  hours?: string;\r\n  id?: string; // Added for predictable ID\r\n}\r\n\r\n// Demo salon data for different cities\r\nexport const demoSalons: SalonData[] = [\r\n  {\r\n    id: 'demo-salon-1',           // <── add predictable ID\r\n    name: \"Fade Masters\",\r\n    location: new GeoPoint(40.7128, -74.0060), // NYC\r\n    queue: 3,\r\n    ownerUid: \"demo-owner-1\",\r\n    lastUpdated: Date.now(),\r\n    address: \"123 Broadway, New York, NY\",\r\n    phone: \"(555) 123-4567\",\r\n    hours: \"9 AM - 8 PM\"\r\n  },\r\n  {\r\n    name: \"The Gentleman's Cut\",\r\n    location: new GeoPoint(40.7589, -73.9851), // Times Square\r\n    queue: 0,\r\n    ownerUid: \"demo-owner-2\",\r\n    lastUpdated: Date.now(),\r\n    address: \"456 Times Square, New York, NY\",\r\n    phone: \"(555) 234-5678\",\r\n    hours: \"8 AM - 9 PM\"\r\n  },\r\n  {\r\n    name: \"Quick Clips\",\r\n    location: new GeoPoint(40.7282, -73.7949), // Queens\r\n    queue: 7,\r\n    ownerUid: \"demo-owner-3\",\r\n    lastUpdated: Date.now(),\r\n    address: \"789 Queens Blvd, Queens, NY\",\r\n    phone: \"(555) 345-6789\",\r\n    hours: \"7 AM - 10 PM\"\r\n  },\r\n  {\r\n    name: \"Style Central\",\r\n    location: new GeoPoint(40.6782, -73.9442), // Brooklyn\r\n    queue: 1,\r\n    ownerUid: \"demo-owner-4\",\r\n    lastUpdated: Date.now(),\r\n    address: \"321 Brooklyn Ave, Brooklyn, NY\",\r\n    phone: \"(555) 456-7890\",\r\n    hours: \"10 AM - 7 PM\"\r\n  },\r\n  {\r\n    name: \"Metro Barber Shop\",\r\n    location: new GeoPoint(40.7505, -73.9934), // Midtown\r\n    queue: 5,\r\n    ownerUid: \"demo-owner-5\",\r\n    lastUpdated: Date.now(),\r\n    address: \"654 5th Avenue, New York, NY\",\r\n    phone: \"(555) 567-8901\",\r\n    hours: \"9 AM - 8 PM\"\r\n  }\r\n];\r\n\r\nexport async function seedDemoData(): Promise<void> {\r\n  try {\r\n    const salonsCollection = collection(db, 'salons');\r\n\r\n    for (const salon of demoSalons) {\r\n      // Use the provided id when it exists, fall back to a random one\r\n      const salonDoc = salon.id\r\n        ? doc(salonsCollection, salon.id)\r\n        : doc(salonsCollection);\r\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n      const { id, ...data } = salon;   // Firestore doc ID lives in the path, not the data\r\n      await setDoc(salonDoc, data);\r\n      console.log(`Added demo salon: ${salon.name}`);\r\n    }\r\n\r\n    console.log('Demo data seeded successfully!');\r\n  } catch (error) {\r\n    console.error('Error seeding demo data:', error);\r\n  }\r\n}\r\n\r\nexport const DEMO_SALON_ID = 'demo-salon-1'; // For barber dashboard "],"mappings":";;AAAA,SAASA,UAAU,EAAEC,GAAG,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,oBAAoB;AACtE,SAASC,EAAE,QAAQ,YAAY;AAe/B,OAAO,MAAMC,UAAuB,GAAG,CACrC;EACEC,EAAE,EAAE,cAAc;EAClBC,IAAI,EAAE,cAAc;EACpBC,QAAQ,EAAE,IAAIL,QAAQ,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;EACzCM,KAAK,EAAE,CAAC;EACRC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;EACvBC,OAAO,EAAE,4BAA4B;EACrCC,KAAK,EAAE,gBAAgB;EACvBC,KAAK,EAAE;AACT,CAAC,EACD;EACET,IAAI,EAAE,qBAAqB;EAC3BC,QAAQ,EAAE,IAAIL,QAAQ,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;EACzCM,KAAK,EAAE,CAAC;EACRC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;EACvBC,OAAO,EAAE,gCAAgC;EACzCC,KAAK,EAAE,gBAAgB;EACvBC,KAAK,EAAE;AACT,CAAC,EACD;EACET,IAAI,EAAE,aAAa;EACnBC,QAAQ,EAAE,IAAIL,QAAQ,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;EACzCM,KAAK,EAAE,CAAC;EACRC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;EACvBC,OAAO,EAAE,6BAA6B;EACtCC,KAAK,EAAE,gBAAgB;EACvBC,KAAK,EAAE;AACT,CAAC,EACD;EACET,IAAI,EAAE,eAAe;EACrBC,QAAQ,EAAE,IAAIL,QAAQ,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;EACzCM,KAAK,EAAE,CAAC;EACRC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;EACvBC,OAAO,EAAE,gCAAgC;EACzCC,KAAK,EAAE,gBAAgB;EACvBC,KAAK,EAAE;AACT,CAAC,EACD;EACET,IAAI,EAAE,mBAAmB;EACzBC,QAAQ,EAAE,IAAIL,QAAQ,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;EACzCM,KAAK,EAAE,CAAC;EACRC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;EACvBC,OAAO,EAAE,8BAA8B;EACvCC,KAAK,EAAE,gBAAgB;EACvBC,KAAK,EAAE;AACT,CAAC,CACF;AAED,OAAO,eAAeC,YAAYA,CAAA,EAAkB;EAClD,IAAI;IACF,MAAMC,gBAAgB,GAAGlB,UAAU,CAACI,EAAE,EAAE,QAAQ,CAAC;IAEjD,KAAK,MAAMe,KAAK,IAAId,UAAU,EAAE;MAE9B,MAAMe,QAAQ,GAAGD,KAAK,CAACb,EAAE,GACrBL,GAAG,CAACiB,gBAAgB,EAAEC,KAAK,CAACb,EAAE,CAAC,GAC/BL,GAAG,CAACiB,gBAAgB,CAAC;MAEzB,MAAeG,IAAI,GAAAC,6BAAA,CAAKH,KAAK,EAAAI,SAAA;MAC7B,MAAMrB,MAAM,CAACkB,QAAQ,EAAEC,IAAI,CAAC;MAC5BG,OAAO,CAACC,GAAG,CAAC,qBAAqBN,KAAK,CAACZ,IAAI,EAAE,CAAC;IAChD;IAEAiB,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;EAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;EAClD;AACF;AAEA,OAAO,MAAMC,aAAa,GAAG,cAAc","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}