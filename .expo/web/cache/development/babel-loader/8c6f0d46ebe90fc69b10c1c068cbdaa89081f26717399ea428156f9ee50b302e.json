{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { doc, onSnapshot, setDoc } from 'firebase/firestore';\nimport { db } from \"../services/firebase\";\nimport { seedDemoData, DEMO_SALON_ID } from \"../services/demoData\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function BarberDashboard() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    queue = _useState2[0],\n    setQueue = _useState2[1];\n  var _useState3 = useState(DEMO_SALON_ID),\n    _useState4 = _slicedToArray(_useState3, 2),\n    salonId = _useState4[0],\n    setSalonId = _useState4[1];\n  var _useState5 = useState('Demo Salon'),\n    _useState6 = _slicedToArray(_useState5, 2),\n    salonName = _useState6[0],\n    setSalonName = _useState6[1];\n  useEffect(function () {\n    if (!salonId) return;\n    var salonRef = doc(db, 'salons', salonId);\n    var unsubscribe = onSnapshot(salonRef, function (docSnap) {\n      if (docSnap.exists()) {\n        var _data$queue, _data$name;\n        var data = docSnap.data();\n        setQueue((_data$queue = data.queue) != null ? _data$queue : 0);\n        setSalonName((_data$name = data.name) != null ? _data$name : 'Demo Salon');\n      } else {\n        setQueue(0);\n      }\n    }, function (error) {\n      console.error('Error listening to salon updates:', error);\n      setQueue(0);\n    });\n    return function () {\n      return unsubscribe();\n    };\n  }, [salonId]);\n  var updateQueue = function () {\n    var _ref = _asyncToGenerator(function* (value) {\n      if (!salonId) return;\n      try {\n        var salonRef = doc(db, 'salons', salonId);\n        yield setDoc(salonRef, {\n          queue: Math.max(value, 0),\n          lastUpdated: Date.now()\n        }, {\n          merge: true\n        });\n      } catch (error) {\n        console.error('Error updating queue:', error);\n        Alert.alert('Error', 'Failed to update queue. Please try again.');\n      }\n    });\n    return function updateQueue(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleSeedDemoData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        yield seedDemoData();\n        Alert.alert('Success', 'Demo data has been seeded! Check the customer map.');\n      } catch (error) {\n        Alert.alert('Error', 'Failed to seed demo data. Please try again.');\n      }\n    });\n    return function handleSeedDemoData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  if (queue === null) {\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.loadingText,\n        children: \"Loading...\"\n      }), _jsx(Button, {\n        title: \"Seed Demo Data\",\n        onPress: handleSeedDemoData,\n        color: \"#007AFF\"\n      })]\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.salonName,\n      children: salonName\n    }), _jsxs(Text, {\n      style: styles.queueText,\n      children: [\"People waiting: \", queue]\n    }), _jsxs(View, {\n      style: styles.buttonRow,\n      children: [_jsx(Button, {\n        title: \"- Remove Person\",\n        onPress: function onPress() {\n          return updateQueue(queue - 1);\n        },\n        color: \"#FF3B30\"\n      }), _jsx(Button, {\n        title: \"+ Add Person\",\n        onPress: function onPress() {\n          return updateQueue(queue + 1);\n        },\n        color: \"#34C759\"\n      })]\n    }), _jsxs(View, {\n      style: styles.demoSection,\n      children: [_jsx(Text, {\n        style: styles.demoText,\n        children: \"Demo Controls:\"\n      }), _jsx(Button, {\n        title: \"Seed Demo Data\",\n        onPress: handleSeedDemoData,\n        color: \"#007AFF\"\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    gap: 20,\n    padding: 24,\n    backgroundColor: '#f5f5f5'\n  },\n  salonName: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 8\n  },\n  queueText: {\n    fontSize: 24,\n    fontWeight: '600',\n    color: '#666'\n  },\n  buttonRow: {\n    flexDirection: 'row',\n    gap: 20,\n    marginTop: 10\n  },\n  loadingText: {\n    fontSize: 18,\n    color: '#666',\n    marginBottom: 20\n  },\n  demoSection: {\n    marginTop: 40,\n    padding: 20,\n    backgroundColor: '#e8f4fd',\n    borderRadius: 10,\n    alignItems: 'center',\n    gap: 10\n  },\n  demoText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#007AFF'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","Button","StyleSheet","Alert","doc","onSnapshot","setDoc","db","seedDemoData","DEMO_SALON_ID","jsx","_jsx","jsxs","_jsxs","BarberDashboard","_useState","_useState2","_slicedToArray","queue","setQueue","_useState3","_useState4","salonId","setSalonId","_useState5","_useState6","salonName","setSalonName","salonRef","unsubscribe","docSnap","exists","_data$queue","_data$name","data","name","error","console","updateQueue","_ref","_asyncToGenerator","value","Math","max","lastUpdated","Date","now","merge","alert","_x","apply","arguments","handleSeedDemoData","_ref2","style","styles","container","children","loadingText","title","onPress","color","queueText","buttonRow","demoSection","demoText","create","flex","justifyContent","alignItems","gap","padding","backgroundColor","fontSize","fontWeight","marginBottom","flexDirection","marginTop","borderRadius"],"sources":["C:/Users/dhrit/Desktop/Idea/Idea/mobile/screens/BarberDashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, Button, StyleSheet, Alert } from 'react-native';\r\nimport { doc, updateDoc, getDoc, onSnapshot, setDoc } from 'firebase/firestore';\r\nimport { db } from '../services/firebase';\r\nimport { seedDemoData, DEMO_SALON_ID } from '../services/demoData';\r\n\r\nexport default function BarberDashboard() {\r\n  const [queue, setQueue] = useState<number | null>(null);\r\n  const [salonId, setSalonId] = useState<string>(DEMO_SALON_ID);\r\n  const [salonName, setSalonName] = useState<string>('Demo Salon');\r\n\r\n  useEffect(() => {\r\n    if (!salonId) return;\r\n\r\n    const salonRef = doc(db, 'salons', salonId);\r\n    \r\n    // Real-time listener for queue updates\r\n    const unsubscribe = onSnapshot(salonRef, (docSnap) => {\r\n      if (docSnap.exists()) {\r\n        const data = docSnap.data();\r\n        setQueue(data.queue ?? 0);\r\n        setSalonName(data.name ?? 'Demo Salon');\r\n      } else {\r\n        setQueue(0);\r\n      }\r\n    }, (error) => {\r\n      console.error('Error listening to salon updates:', error);\r\n      setQueue(0);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [salonId]);\r\n\r\n  const updateQueue = async (value: number) => {\r\n    if (!salonId) return;\r\n    \r\n    try {\r\n      const salonRef = doc(db, 'salons', salonId);\r\n      await setDoc(\r\n        salonRef,\r\n        { queue: Math.max(value, 0), lastUpdated: Date.now() },\r\n        { merge: true }                       // creates if missing, merges if exists\r\n      );\r\n    } catch (error) {\r\n      console.error('Error updating queue:', error);\r\n      Alert.alert('Error', 'Failed to update queue. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleSeedDemoData = async () => {\r\n    try {\r\n      await seedDemoData();\r\n      Alert.alert('Success', 'Demo data has been seeded! Check the customer map.');\r\n    } catch (error) {\r\n      Alert.alert('Error', 'Failed to seed demo data. Please try again.');\r\n    }\r\n  };\r\n\r\n  if (queue === null) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.loadingText}>Loading...</Text>\r\n        <Button \r\n          title=\"Seed Demo Data\" \r\n          onPress={handleSeedDemoData}\r\n          color=\"#007AFF\"\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.salonName}>{salonName}</Text>\r\n      <Text style={styles.queueText}>People waiting: {queue}</Text>\r\n      \r\n      <View style={styles.buttonRow}>\r\n        <Button \r\n          title=\"- Remove Person\" \r\n          onPress={() => updateQueue(queue - 1)} \r\n          color=\"#FF3B30\"\r\n        />\r\n        <Button \r\n          title=\"+ Add Person\" \r\n          onPress={() => updateQueue(queue + 1)}\r\n          color=\"#34C759\"\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.demoSection}>\r\n        <Text style={styles.demoText}>Demo Controls:</Text>\r\n        <Button \r\n          title=\"Seed Demo Data\" \r\n          onPress={handleSeedDemoData}\r\n          color=\"#007AFF\"\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { \r\n    flex: 1, \r\n    justifyContent: 'center', \r\n    alignItems: 'center', \r\n    gap: 20,\r\n    padding: 24,\r\n    backgroundColor: '#f5f5f5'\r\n  },\r\n  salonName: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginBottom: 8\r\n  },\r\n  queueText: { \r\n    fontSize: 24, \r\n    fontWeight: '600',\r\n    color: '#666'\r\n  },\r\n  buttonRow: { \r\n    flexDirection: 'row', \r\n    gap: 20,\r\n    marginTop: 10\r\n  },\r\n  loadingText: {\r\n    fontSize: 18,\r\n    color: '#666',\r\n    marginBottom: 20\r\n  },\r\n  demoSection: {\r\n    marginTop: 40,\r\n    padding: 20,\r\n    backgroundColor: '#e8f4fd',\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    gap: 10\r\n  },\r\n  demoText: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: '#007AFF'\r\n  }\r\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}