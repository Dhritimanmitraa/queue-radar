{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { doc, updateDoc, getDoc } from 'firebase/firestore';\nimport { db } from \"../services/firebase\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SALON_ID = 'YOUR_SALON_DOC_ID';\nexport default function BarberDashboard() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    queue = _useState2[0],\n    setQueue = _useState2[1];\n  useEffect(function () {\n    var load = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var _snap$data$queue, _snap$data;\n        var ref = doc(db, 'salons', SALON_ID);\n        var snap = yield getDoc(ref);\n        setQueue((_snap$data$queue = (_snap$data = snap.data()) == null ? void 0 : _snap$data.queue) != null ? _snap$data$queue : 0);\n      });\n      return function load() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    load();\n  }, []);\n  var updateQueue = function () {\n    var _ref2 = _asyncToGenerator(function* (value) {\n      var ref = doc(db, 'salons', SALON_ID);\n      yield updateDoc(ref, {\n        queue: value,\n        lastUpdated: Date.now()\n      });\n      setQueue(value);\n    });\n    return function updateQueue(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  if (queue === null) {\n    return _jsx(Text, {\n      children: \"Loading...\"\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      style: styles.text,\n      children: [\"People waiting: \", queue]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Button, {\n        title: \"-\",\n        onPress: function onPress() {\n          return updateQueue(Math.max(queue - 1, 0));\n        }\n      }), _jsx(Button, {\n        title: \"+\",\n        onPress: function onPress() {\n          return updateQueue(queue + 1);\n        }\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    gap: 16\n  },\n  row: {\n    flexDirection: 'row',\n    gap: 20\n  },\n  text: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","Button","StyleSheet","doc","updateDoc","getDoc","db","jsx","_jsx","jsxs","_jsxs","SALON_ID","BarberDashboard","_useState","_useState2","_slicedToArray","queue","setQueue","load","_ref","_asyncToGenerator","_snap$data$queue","_snap$data","ref","snap","data","apply","arguments","updateQueue","_ref2","value","lastUpdated","Date","now","_x","children","style","styles","container","text","row","title","onPress","Math","max","create","flex","justifyContent","alignItems","gap","flexDirection","fontSize","fontWeight"],"sources":["C:/Users/dhrit/Desktop/Idea/Idea/mobile/screens/BarberDashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, Button, StyleSheet } from 'react-native';\r\nimport { doc, updateDoc, getDoc } from 'firebase/firestore';\r\nimport { db } from '../services/firebase';\r\n\r\n// TODO: Replace with dynamic salon ID after authentication/registration flow\r\nconst SALON_ID = 'YOUR_SALON_DOC_ID';\r\n\r\nexport default function BarberDashboard() {\r\n  const [queue, setQueue] = useState<number | null>(null);\r\n\r\n  useEffect(() => {\r\n    const load = async () => {\r\n      const ref = doc(db, 'salons', SALON_ID);\r\n      const snap = await getDoc(ref);\r\n      setQueue(snap.data()?.queue ?? 0);\r\n    };\r\n    load();\r\n  }, []);\r\n\r\n  const updateQueue = async (value: number) => {\r\n    const ref = doc(db, 'salons', SALON_ID);\r\n    await updateDoc(ref, { queue: value, lastUpdated: Date.now() });\r\n    setQueue(value);\r\n  };\r\n\r\n  if (queue === null) {\r\n    return <Text>Loading...</Text>;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.text}>People waiting: {queue}</Text>\r\n      <View style={styles.row}>\r\n        <Button title=\"-\" onPress={() => updateQueue(Math.max(queue - 1, 0))} />\r\n        <Button title=\"+\" onPress={() => updateQueue(queue + 1)} />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, justifyContent: 'center', alignItems: 'center', gap: 16 },\r\n  row: { flexDirection: 'row', gap: 20 },\r\n  text: { fontSize: 24, fontWeight: 'bold' },\r\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}